name: "on_pull_request"

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  testing:
    name: Bayeue
    runs-on: ubuntu-latest
    container: golang:1.17
    services:
      mysql:
        image: mariadb:10.1
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: db_bayeue
        ports:
          - 33006:3306
    strategy:
      matrix:
        go: [ "1.17" ]
    steps:
      - uses: actions/checkout@v2
      - name: unit test
        env:
            DBHOST: bayeue-mysql-server
            DBUSER: root
            DBPASS: root
            DBPORT: 3306
            DBNAME: db_bayeue
        run: |
          go mod tidy
          go test ./users/domain/abstraction_test.go -coverpkg=./users/service/...
          go test ./products/domain/abstraction_test.go -coverpkg=./products/service/... 
          go test ./transaction/domain/abstraction_test.go -coverpkg=./transaction/service/... 

  deploy:
      needs: testing
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v2
        - name: Deploy in ec2
          env:
              PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
              HOSTNAME : ${{ secrets.HOST_NAME  }}
              USER_NAME : ${{ secrets.USER_NAME  }}

          run: |
            echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
            ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            
              #Now we have got the access of EC2 and we will start the deploy .
              cd /home/ubuntu/bayeue/path/backend &&
              git checkout master &&
              git fetch --all &&
              git reset --hard origin/master &&
              git pull origin master &&
              docker-compose -f docker-compose.yaml up -d --build